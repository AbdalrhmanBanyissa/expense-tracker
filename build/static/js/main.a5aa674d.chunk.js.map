{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","onFilterChangeHandler","selectedYear","value","onChange","event","target","ExpenseDate","date","month","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","filteredExpenses","length","map","e","id","ChartBar","label","maxValue","barFillHeight","Math","round","style","height","Chart","dataPoints","dataPointValues","dataPoint","totalMaximum","max","ExpenseChart","expenses","chartDataPoints","expense","getMonth","Expenses","useState","filteredYear","setFilteredYear","filter","i","toString","ExpensesChart","ExpenseForm","onSaveExpenseData","onCancel","setTitle","setAmount","setDate","onSubmit","preventDefault","expenseData","Date","type","min","step","onClick","NewExpense","expand","setExpand","onAddExpense","enteredExpenseData","random","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a5aa674d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const { onFilterChangeHandler, selectedYear } = props;\n  const dropdownChangeHandler = (event) => {\n    onFilterChangeHandler(event.target.value);\n  };\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={selectedYear} onChange={dropdownChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from \"react\";\nimport \"./ExpenseDate.css\";\n\nconst ExpenseDate = (props) => {\n  const { date } = props;\n  const month = date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = date.getFullYear();\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from \"react\";\nimport \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\nconst ExpenseItem = (props) => {\n  const { title, amount, date } = props;\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={date} />\n        <div className=\"expense-item__description\">\n          <h2>{title}</h2>\n          <div className=\"expense-item__price\">${amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nconst ExpensesList = (props) => {\n  const { filteredExpenses } = props;\n\n  if (filteredExpenses.length > 0) {\n    return (\n      <ul className=\"expenses-list\">\n        {filteredExpenses.map((e) => (\n          <ExpenseItem\n            key={e.id}\n            title={e.title}\n            amount={e.amount}\n            date={e.date}\n          />\n        ))}\n      </ul>\n    );\n  }\n  return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>;\n};\n\nexport default ExpensesList;\n","import React from \"react\";\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  const { label, value, maxValue } = props;\n  let barFillHeight = \"0%\";\n  if (maxValue > 0) barFillHeight = Math.round((value / maxValue) * 100) + \"%\";\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\nimport \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\nconst Chart = (props) => {\n  const { dataPoints } = props;\n  const dataPointValues = dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nconst ExpenseChart = (props) => {\n  const { expenses } = props;\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpenseChart;\n","import React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  const { expenses } = props;\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n  const filteredExpenses = expenses.filter(\n    (i) => i.date.getFullYear().toString() === filteredYear\n  );\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selectedYear={filteredYear}\n          onFilterChangeHandler={filterChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList expenses={expenses} filteredExpenses={filteredExpenses} />\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const { onSaveExpenseData, onCancel } = props;\n\n  const [title, setTitle] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n\n  const titleChangeHandler = (event) => {\n    setTitle(event.target.value);\n  };\n  const amountChangeHandler = (event) => {\n    setAmount(event.target.value);\n  };\n  const dateChangeHandler = (event) => {\n    setDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title,\n      amount: +amount,\n      date: new Date(date),\n    };\n\n    onSaveExpenseData(expenseData);\n\n    setTitle(\"\");\n    setAmount(\"\");\n    setDate(\"\");\n  };\n\n  const cancelClickHandler = () => {\n    onCancel();\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input type=\"text\" value={title} onChange={titleChangeHandler} />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={amount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={date}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button onClick={cancelClickHandler}>Cancel</button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = (props) => {\n  const [expand, setExpand] = useState(false);\n  const { onAddExpense } = props;\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    onAddExpense(expenseData);\n    setExpand(false);\n  };\n  const addNewExpenseHandler = () => {\n    setExpand(true);\n  };\n  const cancelExpenseHandler = () => {\n    setExpand(false);\n  };\n  return (\n    <div className=\"new-expense\">\n      {!expand && (\n        <button onClick={addNewExpenseHandler}>Add New Expense</button>\n      )}\n      {expand && (\n        <ExpenseForm\n          onCancel={cancelExpenseHandler}\n          onSaveExpenseData={saveExpenseDataHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  //this method shows two way's to add new expense at the top of the expenses list.\n  const addExpenseHandler = (expense) => {\n    // const tempExpenses = [...expenses];\n    // tempExpenses.unshift(expense);\n    // setExpenses(tempExpenses);\n    setExpenses((prevExpenses) => [expense, ...prevExpenses]);\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}